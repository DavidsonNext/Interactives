
# coding: utf-8

# In[2]:

get_ipython().run_cell_magic(u'HTML', u'', u'<!DOCTYPE html>\n<html>\n    <head>\n        <style> \n            body {\n                margin: 10px;\n                /*padding-top: 40px;*/\n            }\n        </style>\n    </head>\n\n    <body>\n        \n        <div id=\'jxgbox1\' class=\'jxgbox\' style=\'width:350px; height:300px; float:left; border: solid #1f628d 2px;\'></div>        \n        <!-- COMMENT: Where our Javascript begins. -->\n        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsxgraph/0.98/jsxgraphcore.js"></script>\n        \n        <!-- COMMENT: Specific Davidson Next calls built on JSXGraph. Must be loaded after JSXgraph. -->\n        <script type="text/javascript" src="../../../JS/Macro_JSXgraph.js"></script>\n        \n        <script type=\'text/javascript\'>\n            \n            //General Parameters for Macro\n            JXG.Options.point.showInfobox = false;\n            JXG.Options.segment.strokeColor = \'Pink\';\n\n            createDragLine = function(board,point1,point2,gname,color,xo,yo) {\n                return board.create(\'segment\',[point1,point2],{strokeColor:color,strokeWidth:\'3\',name:gname,withLabel:true,label:{offset:[xo,yo]}});\n            }\n\n            createSupply = function(board,gname,color) {\n                var c1 = [1.0,2.0];\n                var c2 = [9.0,10.0];\n                var S1 = board.create(\'point\',c1,{withLabel:false,visible:false});\n                var S2 = board.create(\'point\',c2,{withLabel:false,visible:false});\n                return board.create(\'segment\',[S1,S2],{\'strokeColor\':color,\'strokeWidth\':\'3\',\n                                                       \'name\':gname,\'withLabel\':true,\n                                                       \'label\':{\'offset\':[105,105]}\n                                                      });\n            }\n\n            createDemand = function(board,gname,color) {\n                var c1 = [1.0,10.0];\n                var c2 = [9.0,2.0];\n                var D1 = board.create(\'point\',c1,{withLabel:false,visible:false});\n                var D2 = board.create(\'point\',c2,{withLabel:false,visible:false});\n                return board.create(\'segment\',[D1,D2],{\'strokeColor\':color,\'strokeWidth\':\'3\',\n                                                       \'name\':gname,\'withLabel\':true,\n                                                       \'label\':{\'offset\':[105,-105]}\n                                                      });\n            }\n\n\n            /////////////////////////////////////////////////////////////\n            // Dashed Lines\n            function createDashedLines2Axis(board,intersection,options) {\n                var fixed = options.fixed || true;  // defaults\n                var withLabel = options.withLabel || false;\n                var xlabel = options.xlabel || \'\';  \n                var ylabel = options.ylabel || \'\';\n                var color = options.color || \'gray\';\n                \n                var Y1 = board.create(\'point\',[0, intersection.Y()],\n                                      {withLabel:withLabel,\n                                       name:ylabel,visible:true,\n                                       size:\'0.5\',strokeColor:\'Gray\',\n                                       \'label\':{\'offset\':[-25,-2]}});\n\n                var Y2 = board.create(\'point\',[intersection.X(), intersection.Y()],\n                                      {withLabel:false,visible:false});\n\n                var YLine = board.create(\'segment\',[this.Y1,this.Y2],\n                                         {strokeColor:color,strokeWidth:\'2\',dash:\'1\',fixed:fixed});\n\n                var X1 = board.create(\'point\',[intersection.X(), 0],\n                                      {withLabel:withLabel,\n                                       name:xlabel,visible:true,\n                                       size:\'0.5\',strokeColor:\'Gray\',\n                                       \'label\':{\'offset\':[-5,-8]}});\n\n                var X2 = board.create(\'point\',[intersection.X(), intersection.Y()],\n                                      {withLabel:false,visible:false});\n\n                var XLine = board.create(\'segment\',[this.X1,this.X2],\n                                         {strokeColor:color,strokeWidth:\'2\',dash:\'1\',fixed:fixed});\n                \n                \n                var obj = {\n                    Y1: Y1,\n                    Y2: Y2,\n                    YLine: YLine,\n                    X1: X1,\n                    X2: X2\n                };\n                \n                console.log(obj);\n                return obj;\n            }\n            \n            ////////////\n            // BOARD 1\n            ////////////\n            bboxlimits = [-1.5, 12, 12, -1];\n            var brd1 = JXG.JSXGraph.initBoard(\'jxgbox1\', {axis:false, \n                                                    showCopyright: false,\n                                                    showNavigation: false,\n                                                    zoom: false,\n                                                    pan: false,\n                                                    boundingbox:bboxlimits,\n                                                    grid: false,\n                                                    hasMouseUp: true, \n            });\n            \n            xaxis1 = brd1.create(\'axis\', [[0, 0], [11, 0]], {withLabel: false});\n            yaxis1 = brd1.create(\'axis\', [[0, 0], [0, 11]], {withLabel: false});\n\n            //Axes\n                        \n            //SRAS Line 1 - fixed\n            var SRAS1 = createSupply(brd1,\'SRAS1\',\'DodgerBlue\');\n            SRAS1.setAttribute({\'name\':\'SRAS1\',\'fixed\':true,\'highlight\':false});\n            \n            //SRAS Line 2 - draggable\n            var SRAS2 = createSupply(brd1,\'SRAS2\',\'Lime\');\n            SRAS2.setAttribute({\'name\':\'SRAS2\',\'fixed\':false,\'highlight\':true});\n            \n            //Demand Line 1 - fixed\n            var AD1 = createDemand(brd1,\'AD1\',\'DodgerBlue\');\n            AD1.setAttribute({\'dash\':1,\'fixed\':true,\'highlight\':false});\n            \n            //Demand Line 2 - moveable\n            var AD2 = createDemand(brd1,\'AD2\',\'Orange\');\n            AD2.setAttribute({withLabel:false, \'highlight\':true});\n                        \n              \n            \n            ////////////\n            // Intersection Box 1\n            ////////////\n            var iSDfix = brd1.create(\'intersection\', [AD1, SRAS1, 0], {visible:false}); \n            var iS2D = brd1.create(\'intersection\', [AD2, SRAS1, 0], {visible:false});\n            \n            ////////////\n            //LRAS - straight line\n            ////////////\n            var LRAS = brd1.create(\'segment\',[[iSDfix.X(),11.0],[iSDfix.X(),0.0]],\n                                   {\'strokeColor\':\'DodgerBlue\',\'strokeWidth\':\'2\',\n                                    \'name\':\'LRAS\',\'withLabel\':true,\n                                    \'fixed\':true,\n                                    \'label\':{\'offset\':[-15,140]}});  \n            \n            //LRAS Intersection\n            var iLSD = brd1.create(\'intersection\', [LRAS, SRAS2, 0], {visible:false});\n            \n            \n            ////////////\n            // Draggable Dashed Lines for Board 1\n            ////////////\n            var dashesDragB1 = createDashedLines2Axis(brd1,iS2D,\n                                                      {fixed:false,\n                                                       withLabel:false,\n                                                       xlabel:\'Y2\',\n                                                       ylabel:\'PL2\',\n                                                       color:\'Orange\'});\n            \n            ////////////\n            // 2nd SRAS2 Draggable Dashed Lines for Board 1\n            ////////////\n            var dashesDrag2ndB1 = createDashedLines2Axis(brd1,iLSD,\n                                                      {fixed:false,\n                                                       withLabel:false,\n                                                       xlabel:\'\',\n                                                       ylabel:\'PL3\',\n                                                       color:\'Lime\'});\n            \n            \n        </script>\n    </body>\n</html>')


# In[ ]:



